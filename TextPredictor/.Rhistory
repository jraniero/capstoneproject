lat<-lapply(json_data$acList,'[[',"Lat")
long<-lapply(json_data$acList,'[[',"Long")
alt<-lapply(json_data$acList,'[[',"Alt")
trak<-lapply(json_data$acList,'[[',"Trak")
trak[sapply(trak,is.null)]<-NA
my_data=data.frame(Lat=unlist(lat),Long=unlist(long),Alt=unlist(alt),Trak=unlist(trak))
airplaneIcon <- makeIcon(
iconUrl = "https://jraniero.github.io/airplane-shape.png",
iconWidth = 32, iconHeight = 32,
iconAngle=80
)
m <- leaflet(data=my_data) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(~Long, ~Lat, popup=paste("Altitude: ",my_data$Alt,"<br>Heading: ",my_data$Trak,""),icon=airplaneIcon)
m  # Print the map
lat<-lapply(json_data$acList,'[[',"Lat")
long<-lapply(json_data$acList,'[[',"Long")
alt<-lapply(json_data$acList,'[[',"Alt")
trak<-lapply(json_data$acList,'[[',"Trak")
trak[sapply(trak,is.null)]<-NA
my_data=data.frame(Lat=unlist(lat),Long=unlist(long),Alt=unlist(alt),Trak=unlist(trak))
airplaneIcon <- makeIcon(
iconUrl = "https://jraniero.github.io/airplane-shape.png",
iconWidth = 32, iconHeight = 32
)
m <- leaflet(data=my_data) %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(~Long, ~Lat, popup=paste("Altitude: ",my_data$Alt,"<br>Heading: ",my_data$Trak,""),icon=airplaneIcon)
m  # Print the map
airplaneIcon <- makeIcon(
iconUrl = "https://jraniero.github.io/airplane-shape.png",
iconWidth = 32, iconHeight = 32,
options.css=""
)
?makeIcon
css: styles.css
json_file<-"https://public-api.adsbexchange.com/VirtualRadar/AircraftList.json?lat=40.00&lng=-3.00&fDstL=0&fDstU=100"
json_data <- fromJSON(file=json_file)
library(leaflet)
library(rjson)
json_file<-"https://public-api.adsbexchange.com/VirtualRadar/AircraftList.json?lat=40.00&lng=-3.00&fDstL=0&fDstU=100"
json_data <- fromJSON(file=json_file)
library(plotly)
plot_ly(mtcars,x=wt,y=mpg,mode="markers")
packages.install("plotly")
install.packages("plotly")
library(plotly)
install.packages("ggplot")
install.packages("ggplot2")
library(plotly)
plot_ly(mtcars,x=wt,y=mpg,mode="markers")
plot_ly(data=mtcars,x=wt,y=mpg,mode="markers")
mtcars
plot_ly(data=mtcars,x=wt,y=mpg,mode="markers")
plot_ly(data=mtcars,x=mtcars$wt,y=mpg,mode="markers")
plot_ly(cyl~am,data=mycars,main="Cylinders per transmission type",type="box")
mycars<-mtcars
mycars$am<-as.factor(mycars$am)
levels(mycars$am)<-c("Automatic","Manual")
plot_ly(cyl~am,data=mycars,main="Cylinders per transmission type",type="box")
plot_ly(cyl~am,data=mycars,type="box")
plot_ly(x=cyl,y=am,data=mycars,type="box")
plot_ly(y=mycars$cyl,x=mycars$am,data=mycars,type="box")
plot_ly(y=mycars$cyl,x=mycars$am,data=mycars,type="box",yaxis="Cyl")
Data Cleaning
install.packages("webshot")
library(plotly)
plot_ly(y=mycars$cyl,x=mycars$am,data=mycars,type="box",yaxis="Cyl")
plot_ly(y=mycars$wt,x=mycars$am,data=mycars,type="box")
plot_ly(y=mycars$wt,x=mycars$am,data=mycars,color=mycars$am)
plot_ly(y=mycars$wt,x=mycars$am,data=mycars,color=mycars$am,type="scatter")
plot_ly(y=mycars$wt,x=mycars$mpg,data=mycars,color=mycars$am,type="scatter")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter")
add_lines(fitman$coefficients,col="blue")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_lines(fitaut$coefficients,col="red")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter")
?add_lines
fitaut$coefficients
fitaut=lm(mpg~wt,mtcars[mycars$am=="Automatic",])
fitman=lm(mpg~wt,mtcars[mycars$am=="Manual",])
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_lines(fitaut$coefficients,col="red") %>%
add_lines(fitman$coefficients,col="blue")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_lines(fitaut$coefficients,col="red")
fitaut$coefficients
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_lines(x=c(0,10),y=c(fitaut$coefficients[1],fitaut$coefficients[2]*10),col="red")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_trace(x=c(0,10),y=c(fitaut$coefficients[1],fitaut$coefficients[2]*10),col="red")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_trace(x=c(0,10),y=c(fitaut$coefficients[1],fitaut$coefficients[2]*10))
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_trace(x=c(0,10),y=c(fitaut$coefficients[1],fitaut$coefficients[2]*10),mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_trace(x=c(0,10),y=c(fitaut$coefficients[1],fitaut$coefficients[2]*10),mode="lines")
x=c(0,10)
y=c(fitaut$coefficients[1],fitaut$coefficients[2]*10)
w
x
y
x*2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_trace(x,y,mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="markers") %>% add_trace(x,y,mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,mode="markers") %>% add_trace(x,y,mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,mode="markers")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,mode="markers") %>% add_trace(x=c(0,10),y=c(fitaut$coefficients[1],fitaut$coefficients[2]*10),mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,mode="markers") %>% add_segments(x=c(0,10),y=c(fitaut$coefficients[1],fitaut$coefficients[2]*10),mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,mode="markers") %>% add_segments(x=0,xend=10,y=fitaut$coefficients[1],yend=fitaut$coefficients[2]*10,mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=0,xend=10,y=fitaut$coefficients[1],yend=fitaut$coefficients[2]*10,mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=0,xend=3,y=fitaut$coefficients[1],yend=fitaut$coefficients[2]*3,mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=0,xend=3,y=fitaut$coefficients[1],yend=fitaut$coefficients[2]*3+fitaut$coefficients[1],mode="lines")
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=0,xend=3,y=fitaut$coefficients[1],yend=fitaut$coefficients[2]*3+fitaut$coefficients[1],mode="lines",col="blue") %>%
add_segments(x=2,xend=6,y=fitman$coefficients[1]+fitman$coefficients[2]*2,yend=fitman$coefficients[2]*6+fitman$coefficients[1],mode="lines",col="green")
x1=min(mycars[mycars$am=0,]$wt)
x2=max(mycars[mycars$am=0,]$wt)
y1=fitaut$coefficients[1]+fitaut$coefficients[2]*x
y2=fitaut$coefficients[1]+fitaut$coefficients[2]*xend
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=x1,xend=x2,y=y1,yend=y2,mode="lines",col="blue")
xa1=min(mycars[mycars$am==0,]$wt)
xa2=max(mycars[mycars$am==0,]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am==1,]$wt)
xm2=max(mycars[mycars$am==1,]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines",col="blue") %>%
add_segments(x=2,xend=6,y=fitman$coefficients[1]+fitman$coefficients[2]*2,yend=fitman$coefficients[2]*6+fitman$coefficients[1],mode="lines",col="green")
?min
min(mycars[mycars$am==0,]$wt)
mycars[mycars$am==0,]$wt
mycars[mycars$am=="Automatic",]$wt
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines",col="blue")
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines",color="blue") %>%
add_segments(x=xm1,xend=xm2,y=ym1,yend=ym2,mode="lines",color="green")
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines",color="blue")
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines") %>%
)
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter")
xa1
xm1
xa2
xm2
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines")
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,color=mycars$am,type="scatter") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines") %>%
add_segments(x=xm1,xend=xm2,y=ym1,yend=ym2,mode="lines")
fitaut$coefficients
fitman$coefficients
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,type="scatter") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines") %>%
add_segments(x=xm1,xend=xm2,y=ym1,yend=ym2,mode="lines")
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,type="scatter",mode="markers") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines") %>%
add_segments(x=xm1,xend=xm2,y=ym1,yend=ym2,mode="lines")
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,type="scatter",mode="markers") %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines")
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitaut$coefficients[1]+fitaut$coefficients[2]*xm1
ym2=fitaut$coefficients[1]+fitaut$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,type="scatter",mode="markers") %>%
add_segments(x=xm1,xend=xm2,y=ym1,yend=ym2,mode="lines")
xa1=min(mycars[mycars$am=="Automatic",]$wt)
xa2=max(mycars[mycars$am=="Automatic",]$wt)
ya1=fitaut$coefficients[1]+fitaut$coefficients[2]*xa1
ya2=fitaut$coefficients[1]+fitaut$coefficients[2]*xa2
xm1=min(mycars[mycars$am=="Manual",]$wt)
xm2=max(mycars[mycars$am=="Manual",]$wt)
ym1=fitman$coefficients[1]+fitman$coefficients[2]*xm1
ym2=fitman$coefficients[1]+fitman$coefficients[2]*xm2
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,type="scatter",mode="markers",color=mycars$am)
%>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines",color=levels(mycars$am)[0])
plot_ly(y=mycars$mpg,x=mycars$wt,data=mycars,type="scatter",mode="markers",color=mycars$am) %>% add_segments(x=xa1,xend=xa2,y=ya1,yend=ya2,mode="lines",color=levels(mycars$am)[0])
plot_ly(y=mycars$cyl,x=mycars$am,data=mycars,type="box")
p1<-plot_ly(y=mycars$mpg,x=mycars$am,data=mycars,type="box",title="Cylinder")
p2<-plot_ly(y=mycars$disp,x=mycars$am,data=mycars,type="box")
p3<-plot_ly(y=mycars$wt,x=mycars$am,data=mycars,type="box")
p4<-plot_ly(y=mycars$cyl,x=mycars$am,data=mycars,type="box")
p<-subplot(p1,p2,nrows=1,ncols=2)
p<-subplot(p,p3,nrows=2,ncols=2)
subplot(p,p4)
p1<-plot_ly(y=mycars$mpg,x=mycars$am,data=mycars,type="box",title="Cylinder")
p2<-plot_ly(y=mycars$disp,x=mycars$am,data=mycars,type="box")
p3<-plot_ly(y=mycars$wt,x=mycars$am,data=mycars,type="box")
p4<-plot_ly(y=mycars$cyl,x=mycars$am,data=mycars,type="box")
p<-subplot(p1,p2,nrows=1)
p<-subplot(p,p3,nrows=2)
subplot(p,p4)
p1<-plot_ly(y=mycars$mpg,x=mycars$am,data=mycars,type="box",title="Cylinder")
p2<-plot_ly(y=mycars$disp,x=mycars$am,data=mycars,type="box")
p3<-plot_ly(y=mycars$wt,x=mycars$am,data=mycars,type="box")
p4<-plot_ly(y=mycars$cyl,x=mycars$am,data=mycars,type="box")
p<-subplot(p1,p2,nrows=2)
p<-subplot(p,p3,nrows=2)
subplot(p,p4)
plot_ly(y=mycars$mpg,x=mycars$am,data=mycars,type="box",color="MPG") %>%
layout(title=list(title="MPG"))
plot_ly(y=mycars$mpg,x=mycars$am,data=mycars,type="box",color="MPG") %>%
layout(title="MPG")
titles<-as.factor(c("MPG","Displ.","Weight","Cyl"))
p1<-plot_ly(y=mycars$mpg,x=mycars$am,data=mycars,type="box",color=titles[1])
p2<-plot_ly(y=mycars$disp,x=mycars$am,data=mycars,type="box",color=titles[2])
p3<-plot_ly(y=mycars$wt,x=mycars$am,data=mycars,type="box",color=titles[3])
p4<-plot_ly(y=mycars$cyl,x=mycars$am,data=mycars,type="box",color=titles[4])
ps1<-subplot(p1,p2,nrows=1)
ps2<-subplot(p3,p4,nrows=1)
subplot(ps1,ps2,nrows=2)
sum(fitman$residuals^2)+sum(fitaut$residuals^2)
shiny::runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
?predict
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
?abline
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
?legend
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
?text
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
?span
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
lm(mpg~.,data=mtcars)
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
runApp('datasciencecoursera/DataProducts/Week4/JoseApp')
install.packages("slam")
tempdir()
setwd("~/datasciencecoursera/Capstone/TextPredictor")
datapath<-file.path("..","final","en_US")
skip_lines<-5 #For the training set we took 1 line out of 5.We will take the next line for testing
files<-list.files(path=datapath,pattern="*.txt")
for(file in files){
command<-paste("awk 'NR == 1 || NR % ",skipLines," == 1' ",datapath,"/",file," >",datapath,"/test/",file,sep="")
print(command)
system(command)
}
datapath<-file.path("..","final","en_US")
skipLines<-5 #For the training set we took 1 line out of 5.We will take the next line for testing
files<-list.files(path=datapath,pattern="*.txt")
for(file in files){
command<-paste("awk 'NR == 1 || NR % ",skipLines," == 1' ",datapath,"/",file," >",datapath,"/test/",file,sep="")
print(command)
system(command)
}
datapath<-file.path("..","final","en_US")
skipLines<-5 #For the training set we took 1 line out of 5.We will take the next line for testing
files<-list.files(path=datapath,pattern="en_US*.txt")
for(file in files){
command<-paste("awk 'NR == 1 || NR % ",skipLines," == 1' ",datapath,"/",file," >",datapath,"/test/",file,sep="")
print(command)
system(command)
}
files<-list.files(path=datapath,pattern="en*.txt")
for(file in files){
command<-paste("awk 'NR == 1 || NR % ",skipLines," == 1' ",datapath,"/",file," >",datapath,"/test/",file,sep="")
print(command)
system(command)
}
datapath<-file.path("..","final","en_US")
skipLines<-5 #For the training set we took 1 line out of 5.We will take the next line for testing
files<-list.files(path=datapath,pattern="en_US*.txt")
for(file in files){
command<-paste("awk 'NR == 1 || NR % ",skipLines," == 1' ",datapath,"/",file," >",datapath,"/test/",file,sep="")
print(command)
system(command)
}
datapath<-file.path("..","final","en_US")
skipLines<-5 #For the training set we took 1 line out of 5.We will take the next line for testing
files<-list.files(path=datapath,pattern="en_US*.txt")
for(file in files){
command<-paste("awk 'NR == 2 || NR % ",skipLines," == 1' ",datapath,"/",file," >",datapath,"/test/",file,sep="")
print(command)
system(command)
}
library(stringr)
library(tm)
library(SnowballC)
library(data.table)
datapath<-file.path("..","final","en_US")
skipLines<-5 #For the training set we took 1 line out of 5.We will take the next line for testing
files<-list.files(path=datapath,pattern="*.txt")
for(file in files){
command<-paste("awk 'NR == 2 || NR % ",skipLines," == 1' ",datapath,"/",file," >",datapath,"/test/",file,sep="")
print(command)
system(command)
}
?readlines
?readLines()
myText<-Corpus(vectorSource(myLine))
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
myLine<-readLines(file.path(datapath,file),n=1)
myText<-Corpus(VectorSource(myLine))
myText <- tm_map(myText, removeNumbers)
myText<-tm_map(myText,content_transformer(removeURL))
myText<-tm_map(myText,content_transformer(removeHashTags))
myText<-tm_map(myText,content_transformer(removeTwitterHandles))
myText <- tm_map(myText, removePunctuation)
myText <- tm_map(myText, content_transformer(tolower))
myText<-tm_map(myText, PlainTextDocument)
myText <- tm_map(myText, removeWords, stopwords("english"))
myText<-tm_map(myText, stemDocument, language = "english")
myText <- tm_map(myText ,stripWhitespace)
myText[1]$content
words<-unlist(strsplit(unlist(trimws(searchCorpus[[1]]$content))," "))
words<-unlist(strsplit(unlist(trimws(myText[[1]]$content))," "))
searchWords<-words[1:(length(words)-1)]
targetWord<-words[length(words)]
predicted<-searchNext(searchWords,n=1)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
predicted[1]
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
predicted[1]$last_word
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
predicted[1]$last_word!=targetWord
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
rm(list=ls(-))
rm(list=ls())
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
readLines
?readLines
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
rm(list=ls())
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
source('~/datasciencecoursera/Capstone/TextPredictor/test_perf.R', echo=TRUE)
